//
//  FavouritePresenter.swift
//  CryptoTrackerV2
//
//  Created by Алексей Однолько on 24.06.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavouritePresentationLogic {
    func presentfavouriteCoins(response: Favourite.ShowFavouriteCoinsList.Response)
    func presentUpdatedFavouriteCoins(responce: Favourite.ShowUpdateFavouriteCoinList.Response)
    func presentSearchedFavouriteCoins(response: Favourite.ShowSearchedFavouriteCoinsList.Response)
}

class FavouritePresenter: FavouritePresentationLogic {
    
    weak var viewController: FavouriteDisplayLogic?
    
    // MARK: Present favourite coins
    func presentfavouriteCoins(response: Favourite.ShowFavouriteCoinsList.Response) {
        var viewModelForFavouriteCells: [Favourite.ShowFavouriteCoinsList.ViewModel.FavouritCoinCellViewModel] = []
        response.coins.forEach { coin in
            viewModelForFavouriteCells.append(Favourite.ShowFavouriteCoinsList.ViewModel.FavouritCoinCellViewModel(imageCoin: coin.image,
                                                                                                                 nameCoin: coin.name,
                                                                                                                 priceChangePercentage24h: coin.price_change_percentage_24h,
                                                                                                                 priceCoin: coin.current_price))
        }
        let viewModel = Favourite.ShowFavouriteCoinsList.ViewModel(favouritCoinCellViewModel: viewModelForFavouriteCells)
        viewController?.displayFavouritCoins(viewModel: viewModel)
    }
    
    // MARK: Present updated favourite coins
    func presentUpdatedFavouriteCoins(responce: Favourite.ShowUpdateFavouriteCoinList.Response) {
        var viewModelForFavouriteCells: [Favourite.ShowUpdateFavouriteCoinList.ViewModel.FavouritCoinCellViewModel] = []
        responce.coins.forEach { coin in
            viewModelForFavouriteCells.append(Favourite.ShowUpdateFavouriteCoinList.ViewModel.FavouritCoinCellViewModel(imageCoin: coin.image,
                                                                                                                    nameCoin: coin.name,
                                                                                                                    priceChangePercentage24h: coin.price_change_percentage_24h,
                                                                                                                    priceCoin: coin.current_price))
        }
        let viewModel = Favourite.ShowUpdateFavouriteCoinList.ViewModel(favouritCoinCellViewModel: viewModelForFavouriteCells)
        viewController?.displayUpdatedFavouriteCoins(viewModel: viewModel)
    }
    
    // MARK: Present searched favourite coins
    func presentSearchedFavouriteCoins(response: Favourite.ShowSearchedFavouriteCoinsList.Response) {
        var viewModelForSearchedFavouriteCells: [Favourite.ShowSearchedFavouriteCoinsList.ViewModel.FavouriteSearchedCoinCellViewModel] = []
        response.coins.forEach { coin in
            viewModelForSearchedFavouriteCells.append(Favourite.ShowSearchedFavouriteCoinsList.ViewModel.FavouriteSearchedCoinCellViewModel(imageCoin: coin.image,
                                                                                                                                       nameCoin: coin.name,
                                                                                                                                       priceChangePercentage24h: coin.price_change_percentage_24h,
                                                                                                                                       priceCoin: coin.current_price))
        }
        let viewModel = Favourite.ShowSearchedFavouriteCoinsList.ViewModel(favouriteSearchedCoinCellViewModel: viewModelForSearchedFavouriteCells)
        viewController?.displaySearchedFavouritCoins(viewModel: viewModel)
    }
}
